@import "../../../../styles/abstracts/mixins";
@import "../../../../styles/colors.scss";
@import "~@angular/material/theming";
@import "../../../../styles/game/variables";

$margin-top: 4vh;
$text-size: 8vh;
$width: 75%;
$width-desktop: 60%;

@function counter-multiple-text-shadow($n, $color) {
  $value: "0 0 0 #{$color}";
  @for $i from 2 through $n {
    $value: "#{$value} , #{-$i * - 1}px #{ -$i * - 1}px 2px "+lighten(
        $color,
        $i * 3
      );
  }

  @return unquote($value);
}

@keyframes counter-animation {
  0% {
    text-shadow: counter-multiple-text-shadow(5, $higher-color);
  }
  50% {
    text-shadow: counter-multiple-text-shadow(5, $lower-color);
  }
  100% {
    text-shadow: counter-multiple-text-shadow(5, $higher-color);
  }
}


.counter-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: $width;
  min-width: $width / 2;
  margin: auto;
  text-align: center;
}

.name {
  color: $default-text-color;
  margin: 0 auto;
  height: 8vh;
}

.container {
  @include mat-elevation(15);
  background-color: $label-bg;
  border-radius: #{$card-border-radius};
  min-width: $width / 2;
  .score {
    color: $label-text;
    line-height: $text-size;
    text-align: center;
    font-size: $text-size;
    height: $text-size;
    font-weight: 400;
    $shadow-margin: 5;
    text-shadow: counter-multiple-text-shadow(5, $higher-color);
    margin: min(#{2vh}, #{2vw});
    animation: counter-animation 5s infinite;
  }
}

// for desktop layout
@include desktop {
  .counter-container {
    width: $width-desktop;
  }
  .container {
    min-width: $width-desktop / 2;
    .score {
      $text-size: 8vh; // TODO use also vw maybe a min function
      font-size: $text-size;
      height: $text-size;
    }
  }
}

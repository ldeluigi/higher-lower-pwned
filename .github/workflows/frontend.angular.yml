# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Angular CI

on:
  push:
    branches:
      - "**"
    paths:
      - "frontend/angular/**"
      - "nginx/**"
      - ".github/workflows/frontend*.yml"
  pull_request:
    branches:
      - "**"

jobs:
  build:
    name: Build & Test Angular Frontend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/angular/hlp/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        working-directory: frontend/angular/hlp
        run: npm ci
      - name: Build
        working-directory: frontend/angular/hlp
        run: npm run-script build
      - name: Test
        working-directory: frontend/angular/hlp
        run: npm run-script test-prod

  deploy:
    name: Deploy Angular Frontend
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/master')) && (github.repository == 'ldeluigi/higher-lower-pwned')
    needs: [build]
    steps:
      - uses: actions/checkout@v2

      - name: Login to DCR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_NAME }}
          username: ${{ secrets.DOCKER_REGISTRY_CLIENT_ID }}
          password: ${{ secrets.DOCKER_REGISTRY_CLIENT_SECRET }}

      - name: Build Production Images
        run: docker-compose build nginx

      - name: Tag Images for DCR
        run: docker tag hlp-nginx ${{ secrets.DOCKER_REGISTRY_NAME }}/hlp-nginx

      - name: Upload Images to DCR
        run: docker push ${{ secrets.DOCKER_REGISTRY_NAME }}/hlp-nginx
